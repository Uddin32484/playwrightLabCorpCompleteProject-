name: Playwright Tests with Pages and Docker
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  # Build Docker Image
  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/playwright-lapcorp
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # Run Tests (Standard)
  test:
    name: Run Tests (Standard)
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      report-url: ${{ steps.deploy.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: npx playwright test
      continue-on-error: true
    
    - name: Enhance HTML Report
      if: always()
      run: |
        if [ -f "playwright-report/index.html" ]; then
          echo "<p>Report generated: $(date)</p>" >> playwright-report/index.html
          echo "<p>Commit: ${{ github.sha }}</p>" >> playwright-report/index.html
          echo "<p>Branch: ${{ github.ref_name }}</p>" >> playwright-report/index.html
        fi
    
    - name: Setup Pages
      if: always() && github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
    
    - name: Upload to Pages
      if: always() && github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: './playwright-report'
    
    - name: Deploy to Pages
      if: always() && github.ref == 'refs/heads/main'
      id: deploy
      uses: actions/deploy-pages@v4
    
    - name: Upload Report Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ github.run_id }}
        path: playwright-report/
        retention-days: 30

  # Run Tests (Docker)
  docker-test:
    name: Run Tests (Docker)
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
    - name: Create directories
      run: |
        mkdir -p playwright-report-docker
        chmod 777 playwright-report-docker
    
    - name: Run tests in Docker
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/playwright-report-docker:/app/playwright-report \
          -e CI=true \
          ${{ needs.docker-build.outputs.image-tag }} npm test
    
    - name: Upload Docker Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-docker-${{ github.run_id }}
        path: playwright-report-docker/
        retention-days: 30

  # Summary
  notify:
    name: Test Summary
    if: always()
    needs: [test, docker-test, docker-build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Create Summary
      run: |
        echo "## 🎭 Playwright Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Environment | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Standard | ${{ needs.test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Docker | ${{ needs.docker-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Docker Image: \`${{ needs.docker-build.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY